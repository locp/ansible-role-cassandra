---

- name: Create Custom Directory
  file:
    group: "{{ directory.0.spec.group | default('cassandra') }}"
    mode: "{{ directory.0.spec.mode | default(0700) }}"
    owner: "{{ directory.0.spec.owner | default('cassandra') }}"
    path: "{{ directory.1 }}"
    state: directory
  loop: "{{ cassandra_directories
            | dict2items(key_name='set', value_name='spec')
            | subelements('spec.paths') }}"
  loop_control:
    loop_var: directory
  when:
    - not ansible_check_mode
    - cassandra_directories is defined

- name: Apply Cassandra Configuration
  template:
    src: "{{ cassandra_configuration_templ }}"
    dest: "{{ cassandra_configuration_file }}"
    owner: root
    group: root
    mode: 0o644
  notify:
    - cassandra_restart_service

- name: Apply Regular Expression Updates to the Configuration
  lineinfile:
    line: "{{ item.line }}"
    path: "{{ cassandra_configuration_directory }}/{{ item.path }}"
    regexp: "{{ item.regexp }}"
  loop: "{{ cassandra_regex_replacements }}"
  when:
    - not ansible_check_mode
  notify:
    - cassandra_restart_service

- name: Set the DC for Cassandra
  lineinfile:
    dest: "{{ cassandra_configuration_file | dirname }}/cassandra-rackdc.properties"
    regexp: '^dc='
    line: "dc={{ cassandra_dc }}"
  when:
    - cassandra_dc is defined
    - not ansible_check_mode
  notify:
    - cassandra_restart_service

- name: Set the Rack for Cassandra
  lineinfile:
    dest: "{{ cassandra_configuration_file | dirname }}/cassandra-rackdc.properties"
    regexp: '^rack='
    line: "rack={{ cassandra_rack }}"
  when:
    - cassandra_rack is defined
    - not ansible_check_mode
  notify:
    - cassandra_restart_service
