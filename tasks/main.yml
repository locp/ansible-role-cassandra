# Standards: 0.1
---
# tasks file for cassandra
- name: Import the Apache Cassandra Repository Tasks
  include: apache_repo.yml
  when: cassandra_configure_apache_repo

- name: Custom Facts Part 1 of 2
  set_fact:
    cassandra_cms_max_heapsize_mb: "{{
      [
        ([ansible_memtotal_mb * 0.5, 1024] | min),
        ([ansible_memtotal_mb * 0.25, 14336] | min)
      ] | max | round | int }}"
    cassandra_max_heapsize_mb: "{{
      [
        ([ansible_memtotal_mb * 0.5, 1024] | min),
        ([ansible_memtotal_mb * 0.25, 8192] | min)
      ] | max | round | int }}"
  when:
  - ansible_memtotal_mb is defined

- name: Custom Facts Part 2 of 2
  set_fact:
    cassandra_cms_heap_new_size_mb: "{{
      [
        (ansible_processor_vcpus * 100.0),
        ((cassandra_cms_max_heapsize_mb | int) * 0.25)
      ] | min | round | int }}"
    cassandra_heap_new_size_mb: "{{
      [
        (ansible_processor_vcpus * 100.0),
        ((cassandra_max_heapsize_mb | int) * 0.25)
      ] | min | round | int }}"
  when:
  - ansible_memtotal_mb is defined
  - ansible_processor_vcpus is defined

- name: Debug Custom Facts
  debug:
    msg: {
      'ansible_memtotal_mb': "{{ ansible_memtotal_mb }}",
      'ansible_processor_vcpus': "{{ ansible_processor_vcpus }}",
      'cassandra_cms_heap_new_size_mb': "{{ cassandra_cms_heap_new_size_mb }}",
      'cassandra_cms_max_heapsize_mb': "{{ cassandra_cms_max_heapsize_mb }}",
      'cassandra_heap_new_size_mb': "{{ cassandra_heap_new_size_mb }}",
      'cassandra_max_heapsize_mb': "{{ cassandra_max_heapsize_mb }}"
    }
    verbosity: 1
  when:
  - ansible_memtotal_mb is defined
  - ansible_processor_vcpus is defined

- name: Install the Cassandra Package (Package)
  # Retries are in this as the cache has been seen to still be updating when
  # this task gets to be executed.
  package:
    name: "{{ cassandra_package }}"
  retries: 3
  delay: 5
  register: cassandra_pkg_install_result
  until: cassandra_pkg_install_result is succeeded
  when:
  - ansible_os_family is defined
  - ansible_os_family == 'RedHat'
  - ansible_pkg_mgr == 'dnf'
  - not ansible_check_mode


- name: Install the Cassandra Package (YUM)
  # Retries are in this as the cache has been seen to still be updating when
  # this task gets to be executed.
  yum:
    name: "{{ cassandra_package }}"
    update_cache: yes
  retries: 3
  delay: 5
  register: cassandra_yum_install_result
  until: cassandra_yum_install_result is succeeded
  when:
  - ansible_os_family is defined
  - ansible_os_family == 'RedHat'
  - ansible_pkg_mgr == 'yum'
  - not ansible_check_mode

- name: Install the Cassandra Package (Apt)
  apt:
    name: "{{ cassandra_package }}"
    cache_valid_time: 600
  when:
  - ansible_os_family is defined
  - ansible_os_family == 'Debian'
  - not ansible_check_mode

- name: Custom Directories
  include: directory.yml
  with_items: "{{ cassandra_directories.keys() | list }}"
  loop_control:
    loop_var: cassandra_directory_set
  when:
  - cassandra_directories is defined

- name: Set Default Configuration File Location (Debian)
  set_fact:
    cassandra_configuration_file: /etc/cassandra/cassandra.yaml
  when:
  - ansible_os_family is defined
  - ansible_os_family == 'Debian'
  - cassandra_configuration_file is not defined

- name: Set Default Configuration File Location (RedHat)
  set_fact:
    cassandra_configuration_file: /etc/cassandra/default.conf/cassandra.yaml
  when:
  - ansible_os_family is defined
  - ansible_os_family == 'RedHat'
  - cassandra_configuration_file is not defined

- name: Apply Cassandra Configuration
  template:
    src: "{{ cassandra_configuration_templ }}"
    dest: "{{ cassandra_configuration_file }}"
    owner: root
    group: root
    mode: 0644
  notify:
  - cassandra_restart_service

- name: Set the DC for Cassandra
  lineinfile:
    dest: "{{ cassandra_configuration_file | dirname }}/cassandra-rackdc.properties"
    regexp: '^dc='
    line: "dc={{ cassandra_dc }}"
  when:
  - cassandra_dc is defined
  - not ansible_check_mode
  notify:
  - cassandra_restart_service

- name: Set the Rack for Cassandra
  lineinfile:
    dest: "{{ cassandra_configuration_file | dirname }}/cassandra-rackdc.properties"
    regexp: '^rack='
    line: "rack={{ cassandra_rack }}"
  when:
  - cassandra_rack is defined
  - not ansible_check_mode
  notify:
  - cassandra_restart_service

- name: Ensure the Service is in the Required State (RedHat)
  systemd:
    name: cassandra
    enabled: "{{ cassandra_service_enabled }}"
    daemon_reload: yes
    state: "{{ cassandra_service_state }}"
  when:
  - not ansible_check_mode
  - ansible_os_family is defined
  - ansible_os_family == 'RedHat'

- name: Ensure the Service is in the Required State (Debian)
  service:
    name: cassandra
    enabled: "{{ cassandra_service_enabled }}"
    state: "{{ cassandra_service_state }}"
  when:
  - not ansible_check_mode
  - ansible_os_family is defined
  - ansible_os_family == 'Debian'
