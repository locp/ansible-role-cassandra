---
# tasks file for cassandra
- name: Import the Apache Cassandra Repository Tasks
  include: apache_repo.yml
  when: cassandra_configure_apache_repo|bool

- name: Calculate cassandra_cms_max_heapsize_mb
  set_fact:
    cassandra_cms_max_heapsize_mb: "{{
      [
        ([ansible_memtotal_mb * 0.5, 1024] | min),
        ([ansible_memtotal_mb * 0.25, 14336] | min)
      ] | max | round | int }}"
  when:
    - ansible_memtotal_mb is defined
    - cassandra_cms_max_heapsize_mb is not defined

- name: Calculate cassandra_max_heapsize_mb
  set_fact:
    cassandra_max_heapsize_mb: "{{
      [
        ([ansible_memtotal_mb * 0.5, 1024] | min),
        ([ansible_memtotal_mb * 0.25, 8192] | min)
      ] | max | round | int }}"
  when:
    - ansible_memtotal_mb is defined
    - cassandra_max_heapsize_mb is not defined

- name: Calculate cassandra_cms_heap_new_size_mb
  set_fact:
    cassandra_cms_heap_new_size_mb: "{{
      [
        (ansible_processor_vcpus * 100.0),
        ((cassandra_cms_max_heapsize_mb | int) * 0.25)
      ] | min | round | int }}"
  when:
    - ansible_memtotal_mb is defined
    - ansible_processor_vcpus is defined
    - cassandra_cms_heap_new_size_mb is not defined

- name: Calculate cassandra_heap_new_size_mb
  set_fact:
    cassandra_heap_new_size_mb: "{{
      [
        (ansible_processor_vcpus * 100.0),
        ((cassandra_max_heapsize_mb | int) * 0.25)
      ] | min | round | int }}"
  when:
    - ansible_memtotal_mb is defined
    - ansible_processor_vcpus is defined
    - cassandra_heap_new_size_mb is not defined

- name: Debug Custom Facts
  debug:
    msg: {
      'ansible_memtotal_mb': "{{ ansible_memtotal_mb }}",
      'ansible_processor_vcpus': "{{ ansible_processor_vcpus }}",
      'cassandra_cms_heap_new_size_mb': "{{ cassandra_cms_heap_new_size_mb }}",
      'cassandra_cms_max_heapsize_mb': "{{ cassandra_cms_max_heapsize_mb }}",
      'cassandra_heap_new_size_mb': "{{ cassandra_heap_new_size_mb }}",
      'cassandra_max_heapsize_mb': "{{ cassandra_max_heapsize_mb }}"
    }
    verbosity: 1
  when:
    - ansible_memtotal_mb is defined
    - ansible_processor_vcpus is defined

- name: Install the Cassandra Package (Package)
  # Retries are in this as the cache has been seen to still be updating when
  # this task gets to be executed.
  package:
    name: "{{ cassandra_package }}"
  delay: "{{ cassandra_task_delay }}"
  retries: "{{ cassandra_task_retries }}"
  register: cassandra_pkg_install_result
  until: cassandra_pkg_install_result is succeeded
  when:
    - cassandra_install_packages|bool
    - ansible_os_family is defined
    - ansible_os_family == 'RedHat'
    - ansible_pkg_mgr == 'dnf'
    - not ansible_check_mode

- name: Install the Cassandra Package (YUM)
  # Retries are in this as the cache has been seen to still be updating when
  # this task gets to be executed.
  yum:
    name: "{{ cassandra_package }}"
    update_cache: yes
  delay: "{{ cassandra_task_delay }}"
  retries: "{{ cassandra_task_retries }}"
  register: cassandra_yum_install_result
  until: cassandra_yum_install_result is succeeded
  when:
    - cassandra_install_packages|bool
    - ansible_os_family is defined
    - ansible_os_family == 'RedHat'
    - ansible_pkg_mgr == 'yum'
    - not ansible_check_mode

- name: Install the Cassandra Package (Apt)
  apt:
    name: "{{ cassandra_package }}"
    cache_valid_time: 600
  register: cassandra_remote_status
  until: cassandra_remote_status is succeeded
  delay: "{{ cassandra_task_delay }}"
  retries: "{{ cassandra_task_retries }}"
  when:
    - cassandra_install_packages|bool
    - ansible_os_family is defined
    - ansible_os_family == 'Debian'
    - not ansible_check_mode

- name: Systemd Workaround
  template:
    src: "{{ cassandra_systemd_template }}"
    dest: "{{ cassandra_systemd_path }}"
    owner: root
    group: root
    mode: 0644
  when: cassandra_systemd_enabled|bool
  notify:
    - cassandra_restart_service

- name: Custom Directories
  include: directory.yml
  with_items: "{{ cassandra_directories.keys() | list }}"
  loop_control:
    loop_var: cassandra_directory_set
  when:
    - cassandra_directories is defined

- name: Set Default Configuration File Location (Debian)
  set_fact:
    cassandra_configuration_file: /etc/cassandra/cassandra.yaml
  when:
    - ansible_os_family is defined
    - ansible_os_family == 'Debian'
    - cassandra_configuration_file is not defined

- name: Set Default Configuration File Location (RedHat)
  set_fact:
    cassandra_configuration_file: /etc/cassandra/default.conf/cassandra.yaml
  when:
    - ansible_os_family is defined
    - ansible_os_family == 'RedHat'
    - cassandra_configuration_file is not defined

- name: Apply Cassandra Configuration
  template:
    src: "{{ cassandra_configuration_templ }}"
    dest: "{{ cassandra_configuration_file }}"
    owner: root
    group: root
    mode: 0644
  notify:
    - cassandra_restart_service

- name: Configure cassandra settings.
  lineinfile:
    dest: "{{ cassandra_env_file }}"
    regexp: "^#?{{ item.name }}.+$"
    line: "{{ item.name }}='{{ item.value }}'"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ cassandra_env_configuration }}"
  notify:
    - cassandra_restart_service

- name: set cassandra log level
  lineinfile:
    dest: "{{ cassandra_log_config_file }}"
    regexp: ^\s+<logger\sname="org.apache.cassandra"\slevel=".*"/>\s+$
    line: <logger name="org.apache.cassandra" level="{{ cassandra_log_level }}"/>
  notify:
    - cassandra_restart_service

- name: Set the DC for Cassandra
  lineinfile:
    dest: "{{ cassandra_configuration_file | dirname }}/cassandra-rackdc.properties"
    regexp: '^dc='
    line: "dc={{ cassandra_dc }}"
  when:
    - cassandra_dc is defined
    - not ansible_check_mode
  notify:
    - cassandra_restart_service

- name: Set the Rack for Cassandra
  lineinfile:
    dest: "{{ cassandra_configuration_file | dirname }}/cassandra-rackdc.properties"
    regexp: '^rack='
    line: "rack={{ cassandra_rack }}"
  when:
    - cassandra_rack is defined
    - not ansible_check_mode
  notify:
    - cassandra_restart_service

- name: Ensure the Service is in the Required State (RedHat)
  systemd:
    name: cassandra
    enabled: "{{ cassandra_service_enabled }}"
    daemon_reload: yes
    state: "{{ cassandra_service_state }}"
  when:
    - not ansible_check_mode
    - ansible_os_family is defined
    - ansible_os_family == 'RedHat'

- name: Ensure the Service is in the Required State (Debian)
  service:
    name: cassandra
    enabled: "{{ cassandra_service_enabled }}"
    state: "{{ cassandra_service_state }}"
  when:
    - not ansible_check_mode
    - ansible_os_family is defined
    - ansible_os_family == 'Debian'
